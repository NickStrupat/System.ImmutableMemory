<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<PackageId>ImmutableMemory</PackageId>
		<Authors>Nick Strupat</Authors>
		<Product>ImmutableMemory</Product>
		<PackageProjectUrl>https://github.com/NickStrupat/System.ImmutableMemory</PackageProjectUrl>
		<RepositoryUrl>https://github.com/NickStrupat/System.ImmutableMemory</RepositoryUrl>
		<PackageLicenseExpression>MIT</PackageLicenseExpression>
		<PackageTags>immutable immutability memory readonly-memory span readonly-span</PackageTags>
		<Version>1.0.0</Version>
		<Description>Immutable versions of `Memory&lt;T&gt;` and `Span&lt;T&gt;`, because `ReadOnlyMemory/Span` doesn't imply the underlying memory won't be mutated. These types either wrap known immutable objects (`String`, `ImmutableArray&lt;T&gt;`), or they take sole ownership of a defensive copy of the underlying memory. They then provide a non-mutating API which closely resembles `ReadOnlyMemory/Span`.</Description>
		<PackageReadmeFile>README.md</PackageReadmeFile>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="System.Memory" Version="4.5.4"/>
		<PackageReference Include="System.Collections.Immutable" Version="6.0.0"/>
	</ItemGroup>

	<ItemGroup>
		<None Include="../../README.md" pack="true" PackagePath="." />
	</ItemGroup>

</Project>
